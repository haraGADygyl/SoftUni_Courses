function cov_1qih3smh43(){var path="D:\\Tisho\\GitHub\\SoftUni_Courses_VSC\\SoftUni_Courses\\JS_Advanced\\Mocha\\Test\\test.js";var hash="0bfe247889268f700da386dd10bf2946a233e972";var global=new Function("return this")();var gcv="__coverage__";var coverageData={path:"D:\\Tisho\\GitHub\\SoftUni_Courses_VSC\\SoftUni_Courses\\JS_Advanced\\Mocha\\Test\\test.js",statementMap:{"0":{start:{line:1,column:13},end:{line:1,column:35}},"1":{start:{line:2,column:10},end:{line:2,column:31}},"2":{start:{line:4,column:0},end:{line:10,column:3}},"3":{start:{line:5,column:4},end:{line:9,column:7}},"4":{start:{line:6,column:26},end:{line:6,column:27}},"5":{start:{line:7,column:24},end:{line:7,column:35}},"6":{start:{line:8,column:8},end:{line:8,column:51}}},fnMap:{"0":{name:"(anonymous_0)",decl:{start:{line:4,column:43},end:{line:4,column:44}},loc:{start:{line:4,column:55},end:{line:10,column:1}},line:4},"1":{name:"(anonymous_1)",decl:{start:{line:5,column:37},end:{line:5,column:38}},loc:{start:{line:5,column:49},end:{line:9,column:5}},line:5}},branchMap:{},s:{"0":0,"1":0,"2":0,"3":0,"4":0,"5":0,"6":0},f:{"0":0,"1":0},b:{},_coverageSchema:"1a1c01bbd47fc00a2c39e90264f33305004495a9",hash:"0bfe247889268f700da386dd10bf2946a233e972"};var coverage=global[gcv]||(global[gcv]={});if(!coverage[path]||coverage[path].hash!==hash){coverage[path]=coverageData;}var actualCoverage=coverage[path];{// @ts-ignore
cov_1qih3smh43=function(){return actualCoverage;};}return actualCoverage;}cov_1qih3smh43();let expect=(cov_1qih3smh43().s[0]++,require("chai").expect);let sum=(cov_1qih3smh43().s[1]++,require("../sum").sum);cov_1qih3smh43().s[2]++;describe("sum(arr) - sum array of number",function(){cov_1qih3smh43().f[0]++;cov_1qih3smh43().s[3]++;it("should return 3 for [1, 2]",function(){cov_1qih3smh43().f[1]++;let expectedSum=(cov_1qih3smh43().s[4]++,3);let actualSum=(cov_1qih3smh43().s[5]++,sum([1,2]));cov_1qih3smh43().s[6]++;expect(actualSum).to.be.equal(expectedSum);});});
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInRlc3QuanMiXSwibmFtZXMiOlsiZXhwZWN0IiwicmVxdWlyZSIsInN1bSIsImRlc2NyaWJlIiwiaXQiLCJleHBlY3RlZFN1bSIsImFjdHVhbFN1bSIsInRvIiwiYmUiLCJlcXVhbCJdLCJtYXBwaW5ncyI6InkyQ0FlWTsyRkFmWixHQUFJQSxDQUFBQSxNQUFNLDBCQUFHQyxPQUFPLENBQUMsTUFBRCxDQUFQLENBQWdCRCxNQUFuQixDQUFWLENBQ0EsR0FBSUUsQ0FBQUEsR0FBRywwQkFBR0QsT0FBTyxDQUFDLFFBQUQsQ0FBUCxDQUFrQkMsR0FBckIsQ0FBUCxDLHdCQUVBQyxRQUFRLENBQUMsZ0NBQUQsQ0FBbUMsVUFBWSxpREFDbkRDLEVBQUUsQ0FBQyw0QkFBRCxDQUErQixVQUFZLHlCQUN6QyxHQUFJQyxDQUFBQSxXQUFXLDBCQUFHLENBQUgsQ0FBZixDQUNBLEdBQUlDLENBQUFBLFNBQVMsMEJBQUdKLEdBQUcsQ0FBQyxDQUFDLENBQUQsQ0FBSSxDQUFKLENBQUQsQ0FBTixDQUFiLENBRnlDLHdCQUd6Q0YsTUFBTSxDQUFDTSxTQUFELENBQU4sQ0FBa0JDLEVBQWxCLENBQXFCQyxFQUFyQixDQUF3QkMsS0FBeEIsQ0FBOEJKLFdBQTlCLEVBQ0gsQ0FKQyxDQUFGLENBS0gsQ0FOTyxDQUFSIiwic291cmNlc0NvbnRlbnQiOlsibGV0IGV4cGVjdCA9IHJlcXVpcmUoXCJjaGFpXCIpLmV4cGVjdDtcclxubGV0IHN1bSA9IHJlcXVpcmUoXCIuLi9zdW1cIikuc3VtO1xyXG5cclxuZGVzY3JpYmUoXCJzdW0oYXJyKSAtIHN1bSBhcnJheSBvZiBudW1iZXJcIiwgZnVuY3Rpb24gKCkge1xyXG4gICAgaXQoXCJzaG91bGQgcmV0dXJuIDMgZm9yIFsxLCAyXVwiLCBmdW5jdGlvbiAoKSB7XHJcbiAgICAgICAgbGV0IGV4cGVjdGVkU3VtID0gMztcclxuICAgICAgICBsZXQgYWN0dWFsU3VtID0gc3VtKFsxLCAyXSk7XHJcbiAgICAgICAgZXhwZWN0KGFjdHVhbFN1bSkudG8uYmUuZXF1YWwoZXhwZWN0ZWRTdW0pO1xyXG4gICAgfSk7XHJcbn0pOyJdfQ==